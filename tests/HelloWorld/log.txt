initializing SDL
<--- Entering Experiment::Experiment() 0 --->
<--- Exiting Experiment::Experiment() 0 --->
<--- Entering Experiment::InitializeDB() 0 --->
using sqlite3 version
<--- Exiting Experiment::InitializeDB() 0 --->
<--- Entering Experiment::InitializeExp() --->
mode is 1
<--- Entering Experiment::DeleteSession()  --->
sqlite: DELETE FROM  StateTiming  WHERE TrialID IN (SELECT TrialID FROM Trial WHERE SessionID=1)
sqlite: DELETE FROM  EventTiming  WHERE TrialID IN (SELECT TrialID FROM Trial WHERE SessionID=1)
sqlite: DELETE FROM  Msg  WHERE TrialID IN (SELECT TrialID FROM Trial WHERE SessionID=1)
sqlite: DELETE FROM  Mouse  WHERE RespID IN (SELECT RespID FROM Response JOIN Trial USING (TrialID) WHERE SessionID=1)
sqlite: DELETE FROM  Eye  WHERE RespID IN (SELECT RespID FROM Response JOIN Trial USING (TrialID) WHERE SessionID=1)
sqlite: DELETE FROM  Keyboard  WHERE RespID IN (SELECT RespID FROM Response JOIN Trial USING (TrialID) WHERE SessionID=1)
sqlite: DELETE FROM  KeyTrack  WHERE RespID IN (SELECT RespID FROM Response JOIN Trial USING (TrialID) WHERE SessionID=1)
sqlite: DELETE FROM  ResponsesExcluded  WHERE RespID IN (SELECT RespID FROM Response JOIN Trial USING (TrialID) WHERE SessionID=1)
sqlite: DELETE FROM  GamePad  WHERE RespID IN (SELECT RespID FROM Response JOIN Trial USING (TrialID) WHERE SessionID=1)
sqlite: DELETE FROM  Response  WHERE TrialID IN (SELECT TrialID FROM Trial WHERE SessionID=1)
sqlite: DELETE FROM  Trial  WHERE SessionID=1
<--- Exiting Experiment::DeleteSession()  --->
<--- Entering Experiment::CreateOrPurgeResponseDir()  --->
response/s0000001
<--- Exiting Experiment::CreateOrPurgeResponseDir()  --->
sqlite: SELECT ListID FROM Session WHERE SessionID=1
ListID is 1 for SessionID 1
sqlite: UPDATE Session SET Completion='IN PROGRESS' WHERE SessionID=1
sqlite: UPDATE Session SET Seed=1465910516 WHERE SessionID=1
established seed of 1465910516
sqlite: UPDATE Session SET Completion='IN_PROGRESS' WHERE SessionID=1
sqlite: UPDATE Session SET Date=datetime('now') WHERE SessionID=1
LOADING EXPERIMENT CONFIGURATION...
sqlite: SELECT COUNT(*) FROM sqlite_master WHERE type='table' and name='EXPConfig'
sqlite: SELECT Var, Data FROM EXPConfig
Display_Width = 1280
Display_Height = 1024
Video_Device = /dev/video0
sqlite: SELECT SubjID FROM Subject WHERE SessionID=1
Subject ID is 1
<--- Entering Experiment::LoadTemplates() --->
sqlite: SELECT Template.TemplateID, Template.Timeout, Template.Name 
FROM Template 
INNER JOIN Item ON Template.TemplateID=Item.TemplateID 
INNER JOIN ListOrder ON Item.ItemCellID=ListOrder.ItemCellID 
INNER JOIN Phase ON ListOrder.PhaseID=Phase.PhaseID 
INNER JOIN Block ON Phase.BlockID=Block.BlockID 
WHERE ListOrder.ListID= 1 
GROUP BY Template.TemplateID, Template.Timeout, Template.Name
   <--- Entering Template::Template() only (1) --->
   <--- Exiting Template::Template() only (1) --->

1 templates retrieved

   <--- Entering Template::LoadAOIs() only (1) --->
sqlite: SELECT AOIArgs.AOIID, AOIArgs.ArgID, AOIArgs.Info 
FROM AOIArgs INNER JOIN AOI ON AOI.AOIID=AOIArgs.AOIID 
WHERE AOI.ID=1 AND AOI.Link='template' 
ORDER BY AOIArgs.AOIID, AOIArgs.ArgID
sqlite: SELECT AOI.AOIID, Name, Resource, x1, y1, Layer 
FROM AOI 
WHERE ID=1 AND Link='template' 
ORDER BY Layer, AOI.AOIID ASC
   <--- Exiting Template::LoadAOIs() only (1) --->
sqlite: SELECT StateID, Name, Sequence 
FROM State 
WHERE TemplateID= 1 
ORDER BY Sequence;

TemplateID 1 has 2 states.

      <--- Entering State::State() prep (1) --->
      <--- Exiting State::State() prep (1) --->
      <--- Entering State::State() main (2) --->
      <--- Exiting State::State() main (2) --->
      <--- Entering LoadEvents() prep (1) --->
sqlite: SELECT EventID, EvtCmdID, Msec 
FROM Event 
WHERE StateID=1
ORDER BY Msec ASC
         <--- Entering State::GetArgs() prep (1) --->
sqlite: SELECT ArgID, Info 
FROM EventArgs
WHERE EventID=7
         <--- Exiting State::GetArgs() prep (1) --->
the EvtCmdID was 400
creating new webcam instance...
      <--- Entering Webcam2::Webcam2() 0 --->
      <--- Exiting Webcam2::Webcam2() 0 --->
      <--- Exiting LoadEvents() prep (1) --->
      <--- Entering LoadWatches() prep (1) --->
sqlite: SELECT WatchID, WCmdID, NextStateID 
FROM Watch 
WHERE StateID=1
ORDER BY WatchID ASC
         <--- Entering State::GetArgs() prep (1) --->
sqlite: SELECT ArgID, Info 
FROM WatchArgs
WHERE WatchID=2
         <--- Exiting State::GetArgs() prep (1) --->
      <--- Entering WatchDone::WatchDone() 2 --->
      <--- Exiting WatchDone::WatchDone() 2 --->
      <--- Exiting LoadWatches() prep (1) --->
      <--- Entering LoadEvents() main (2) --->
sqlite: SELECT EventID, EvtCmdID, Msec 
FROM Event 
WHERE StateID=2
ORDER BY Msec ASC
         <--- Entering State::GetArgs() main (2) --->
sqlite: SELECT ArgID, Info 
FROM EventArgs
WHERE EventID=1
         <--- Exiting State::GetArgs() main (2) --->
the EvtCmdID was 12
      <--- Exiting LoadEvents() main (2) --->
      <--- Entering LoadWatches() main (2) --->
sqlite: SELECT WatchID, WCmdID, NextStateID 
FROM Watch 
WHERE StateID=2
ORDER BY WatchID ASC
         <--- Entering State::GetArgs() main (2) --->
sqlite: SELECT ArgID, Info 
FROM WatchArgs
WHERE WatchID=1
         <--- Exiting State::GetArgs() main (2) --->
         <--- Entering WatchMouse::WatchMouse() 1 --->
watching for ANYBUTTON down
         <--- Exiting WatchMouse::WatchMouse() 1 --->
      <--- Exiting LoadWatches() main (2) --->
<--- Exiting Experiment::LoadTemplates() --->
<--- Entering Experiment::LoadItems() --->
sqlite: SELECT Item.ItemCellID, Item.TemplateID 
FROM Item 
INNER JOIN ListOrder ON Item.ItemCellID=ListOrder.ItemCellID 
INNER JOIN Phase ON ListOrder.PhaseID=Phase.PhaseID 
INNER JOIN Block ON Phase.BlockID=Block.BlockID 
WHERE ListID=1
GROUP BY Item.ItemCellID, Item.TemplateID
   <--- Entering ItemCell::LoadAOIs() 1 --->
sqlite: SELECT AOIArgs.AOIID, AOIArgs.ArgID, AOIArgs.Info 
FROM AOIArgs INNER JOIN AOI ON AOI.AOIID=AOIArgs.AOIID 
WHERE AOI.ID=1 AND AOI.Link='itemcell' 
ORDER BY AOIArgs.AOIID, AOIArgs.ArgID
sqlite: SELECT AOI.AOIID, Name, Resource, x1, y1, Layer 
FROM AOI 
WHERE ID=1 AND Link='itemcell' 
ORDER BY Layer, AOI.AOIID ASC
sg.jpg
      <--- Entering StimulusImg::StimulusImg() sg.jpg --->
      <--- Exiting StimulusImg::StimulusImg() sg.jpg --->
dk.png
      <--- Entering StimulusImg::StimulusImg() dk.png --->
      <--- Exiting StimulusImg::StimulusImg() dk.png --->
   <--- Exiting ItemCell::LoadAOIs() 1 --->
   <--- Entering ItemCell::LoadResources() 1 --->
sqlite: SELECT Code, Data 
FROM Resource 
WHERE ItemCellID= 1 ORDER BY Code
IMGFILE=sg.jpg
SFILE=01.raw
TXT=Hello world
   <--- Exiting ItemCell::LoadResources() 1 --->
   <--- Entering ItemCell::LoadAOIs() 2 --->
sqlite: SELECT AOIArgs.AOIID, AOIArgs.ArgID, AOIArgs.Info 
FROM AOIArgs INNER JOIN AOI ON AOI.AOIID=AOIArgs.AOIID 
WHERE AOI.ID=2 AND AOI.Link='itemcell' 
ORDER BY AOIArgs.AOIID, AOIArgs.ArgID
sqlite: SELECT AOI.AOIID, Name, Resource, x1, y1, Layer 
FROM AOI 
WHERE ID=2 AND Link='itemcell' 
ORDER BY Layer, AOI.AOIID ASC
dk.png
      <--- Entering StimulusImg::StimulusImg() dk.png --->
      <--- Exiting StimulusImg::StimulusImg() dk.png --->
sg.png
      <--- Entering StimulusImg::StimulusImg() sg.png --->
      <--- Exiting StimulusImg::StimulusImg() sg.png --->
   <--- Exiting ItemCell::LoadAOIs() 2 --->
   <--- Entering ItemCell::LoadResources() 2 --->
sqlite: SELECT Code, Data 
FROM Resource 
WHERE ItemCellID= 2 ORDER BY Code
IMGFILE=sg.jpg
SFILE=02.raw
TXT=Yo
   <--- Exiting ItemCell::LoadResources() 2 --->
   <--- Entering ItemCell::LoadAOIs() 3 --->
sqlite: SELECT AOIArgs.AOIID, AOIArgs.ArgID, AOIArgs.Info 
FROM AOIArgs INNER JOIN AOI ON AOI.AOIID=AOIArgs.AOIID 
WHERE AOI.ID=3 AND AOI.Link='itemcell' 
ORDER BY AOIArgs.AOIID, AOIArgs.ArgID
sqlite: SELECT AOI.AOIID, Name, Resource, x1, y1, Layer 
FROM AOI 
WHERE ID=3 AND Link='itemcell' 
ORDER BY Layer, AOI.AOIID ASC
sg.png
      <--- Entering StimulusImg::StimulusImg() sg.png --->
      <--- Exiting StimulusImg::StimulusImg() sg.png --->
dk.png
      <--- Entering StimulusImg::StimulusImg() dk.png --->
      <--- Exiting StimulusImg::StimulusImg() dk.png --->
   <--- Exiting ItemCell::LoadAOIs() 3 --->
   <--- Entering ItemCell::LoadResources() 3 --->
sqlite: SELECT Code, Data 
FROM Resource 
WHERE ItemCellID= 3 ORDER BY Code
IMGFILE=sg.jpg
SFILE=03.raw
TXT=Trial3
   <--- Exiting ItemCell::LoadResources() 3 --->
   <--- Entering ItemCell::LoadAOIs() 4 --->
sqlite: SELECT AOIArgs.AOIID, AOIArgs.ArgID, AOIArgs.Info 
FROM AOIArgs INNER JOIN AOI ON AOI.AOIID=AOIArgs.AOIID 
WHERE AOI.ID=4 AND AOI.Link='itemcell' 
ORDER BY AOIArgs.AOIID, AOIArgs.ArgID
sqlite: SELECT AOI.AOIID, Name, Resource, x1, y1, Layer 
FROM AOI 
WHERE ID=4 AND Link='itemcell' 
ORDER BY Layer, AOI.AOIID ASC
dk.png
      <--- Entering StimulusImg::StimulusImg() dk.png --->
      <--- Exiting StimulusImg::StimulusImg() dk.png --->
sg.png
      <--- Entering StimulusImg::StimulusImg() sg.png --->
      <--- Exiting StimulusImg::StimulusImg() sg.png --->
   <--- Exiting ItemCell::LoadAOIs() 4 --->
   <--- Entering ItemCell::LoadResources() 4 --->
sqlite: SELECT Code, Data 
FROM Resource 
WHERE ItemCellID= 4 ORDER BY Code
IMGFILE=sg.jpg
SFILE=04.raw
TXT=Trial4
   <--- Exiting ItemCell::LoadResources() 4 --->
<--- Exiting Experiment::LoadItems() --->
<--- Entering Experiment::PurgeTrialsTodo() --->
sqlite: SELECT COUNT(*) FROM sqlite_master WHERE type='table' and name='TrialsTodo'
sqlite: DELETE FROM TrialsTodo WHERE SessionID=1
<--- Exiting Experiment::PurgeTrialsTodo() --->
<--- Entering Experiment::SequenceItems() --->
sqlite: SELECT Block.BlockID, Block.OrderConstraint 
FROM Block 
INNER JOIN Phase ON Block.BlockID=Phase.BlockID 
INNER JOIN ListOrder ON Phase.PhaseID=ListOrder.PhaseID 
WHERE (ListID= 1 ) AND (Block.OrderConstraint IS NOT NULL) 
GROUP BY Block.OrderConstraint, Block.BlockID
sqlite: SELECT Block.BlockID 
FROM Block 
INNER JOIN Phase ON Block.BlockID=Phase.BlockID 
INNER JOIN ListOrder ON Phase.PhaseID=ListOrder.PhaseID 
WHERE (ListID= 1 ) AND (Block.OrderConstraint IS NULL) 
GROUP BY Block.BlockID 
ORDER BY RANDOM()
Block order is:
1 

sqlite: SELECT Phase.PhaseID, Phase.OrderConstraint 
FROM Phase 
INNER JOIN ListOrder ON Phase.PhaseID=ListOrder.PhaseID 
WHERE (Phase.BlockID= 1 ) AND (ListID= 1) AND (Phase.OrderConstraint IS NOT NULL) 
GROUP BY Phase.OrderConstraint, Phase.PhaseID
sqlite: SELECT Phase.PhaseID, Phase.OrderConstraint 
FROM Phase 
INNER JOIN ListOrder ON Phase.PhaseID=ListOrder.PhaseID 
WHERE (Phase.BlockID= 1 ) AND (ListID= 1) AND (Phase.OrderConstraint IS NULL) 
GROUP BY Phase.PhaseID 
ORDER BY RANDOM()
Phase order is:
1 

sqlite: SELECT ItemCellID, OrderConstraint FROM ListOrder 
WHERE (PhaseID=1) AND (ListID=1) AND (OrderConstraint IS NOT NULL) 
ORDER BY OrderConstraint
sqlite: SELECT ItemCellID, OrderConstraint FROM ListOrder 
WHERE (PhaseID=1) AND (ListID=1) AND (OrderConstraint IS NULL) 
ORDER BY RANDOM()
Item order is:
1 2 3 4 

<--- Exiting Experiment::SequenceItems() --->
<--- Entering Experiment::FillTrialsTodo() --->
sqlite: CREATE TABLE IF NOT EXISTS TrialsTodo (SessionID INTEGER, ItemCellID INTEGER, BlockID INTEGER, PhaseID INTEGER, Ord INTEGER)
sqlite: BEGIN;
sqlite: INSERT INTO TrialsTodo VALUES (1, 1, 1, 1, 1)
sqlite: INSERT INTO TrialsTodo VALUES (1, 2, 1, 1, 2)
sqlite: INSERT INTO TrialsTodo VALUES (1, 3, 1, 1, 3)
sqlite: INSERT INTO TrialsTodo VALUES (1, 4, 1, 1, 4)
sqlite: COMMIT;
<--- Exiting Experiment::FillTrialsTodo() --->
<--- Entering Experiment::CreateTrialObjects() --->
There are 4 trials in all
<--- Exiting Experiment::CreateTrialObjects() --->
<--- Exiting Experiment::InitializeExp() --->
<--- Entering Experiment::Prepare() 0 --->
display not initialized
Display size is 1280 1024
display initialized
ttf initialized
<--- Entering Audio_SDL::Audio_SDL() 0 --->
<--- Exiting Audio_SDL::Audio_SDL() 0 --->
audio initialized
<--- Exiting Experiment::Prepare() 0 --->
<--- Entering Experiment::PrepareNextTrial() 0 --->
   <--- Entering Template::AddAOIs() only (1) --->
   <--- Exiting Template::AddAOIs() only (1) --->
   <--- Entering Template::Prepare() only (1) --->
   <--- Entering Stimulus::Prepare() 17 --->
   <--- Exiting Stimulus::Prepare() 17 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
initializing memory surface
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() sg.jpg --->
      <--- Exiting StimulusImg::Prepare() sg.jpg --->
   <--- Entering Stimulus::Prepare() 18 --->
   <--- Exiting Stimulus::Prepare() 18 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() dk.png --->
      <--- Exiting StimulusImg::Prepare() dk.png --->
   <--- Entering State::Prepare() prep (1) --->
         <--- Entering Event::Prepare() 7 --->
         <--- Entering StimulusWebcam::Prepare() 0 --->
format requested unavailable, got width 1280 height 800
x: 1280 1280 1280
y: 112 1024 800
         <--- Exiting StimulusWebcam::Prepare() 0 --->
         <--- Exiting Event::Prepare() 7 --->
   <--- Exiting State::Prepare() prep (1) --->
   <--- Entering State::Prepare() main (2) --->
         <--- Entering Event::Prepare() 1 --->
   <--- Entering StimulusDisplayOn::Prepare() 0 --->
   <--- Exiting StimulusDisplayOn::Prepare() 0 --->
         <--- Exiting Event::Prepare() 1 --->
   <--- Exiting State::Prepare() main (2) --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
   <--- Exiting Template::Prepare() only (1) --->
<--- Exiting Experiment::PrepareNextTrial() 0 --->
<--- Entering Experiment::StartNextTrial() 0 --->
   <--- Entering Trial::Start() 1 --->
   <--- Entering ItemCell::Start() 1 --->
      <--- Entering Template::Start() 1 --->
      <--- Exiting Template::Start() 1 --->
         <--- Entering State::Start() prep (1) --->
         <--- Entering State::Main() prep (1) --->
         <--- Exiting State::Start() prep (1) --->
   <--- Exiting Trial::Start() 1 --->
<--- Exiting Experiment::StartNextTrial() 0 --->
         <--- Entering Event::Action() 7 --->
         <--- Entering StimulusWebcam::Action() 0 --->
         <--- Exiting StimulusWebcam::Action() 0 --->
         <--- Exiting Event::Action() 7 --->
... user event 7 614
      <--- Entering WatchDone::CheckCondition() 2 --->
      <--- Exiting WatchDone::CheckCondition() 2 --->
done signaled
            <--- Entering State::Finish() prep (1) --->
         <--- Exiting State::Main() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
<--- Entering Template::HandleEvent() 1 --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
         <--- Entering State::Start() main (2) --->
         <--- Entering State::Main() main (2) --->
         <--- Exiting State::Start() main (2) --->
         <--- Entering Event::Action() 1 --->
<--- Exiting Template::HandleEvent() 1 --->
   <--- Entering StimulusDisplayOn::Action() 0 --->
   <--- Exiting StimulusDisplayOn::Action() 0 --->
   <--- Entering Stimulus::Action() 0 --->
   <--- Exiting Stimulus::Action() 0 --->
         <--- Exiting Event::Action() 1 --->
... user event 7 621
   <--- Entering State::ProcessMouseButton() main (2) --->
         <--- Entering WatchMouse::CheckCondition() 1 --->
1 watch 1 140720308486145
1 result 1
         <--- Exiting WatchMouse::CheckCondition() 1 --->
mouse button signaled (WatchID=1)
   <--- Exiting State::ProcessMouseButton() main (2) --->
            <--- Entering State::Finish() main (2) --->
         <--- Exiting State::Main() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
<--- Entering Template::HandleEvent() 1 --->
ending trial
   <--- Entering Template::Finish() only (1) --->
      <--- Entering StimulusImg::Finish() sg.jpg --->
      <--- Exiting StimulusImg::Finish() sg.jpg --->
      <--- Entering StimulusImg::Finish() dk.png --->
      <--- Exiting StimulusImg::Finish() dk.png --->
            <--- Entering State::Finish() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::PostTrial() prep (1) --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::Finish() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
            <--- Entering State::PostTrial() main (2) --->
            <--- Exiting State::Finish() main (2) --->
   <--- Exiting Template::Finish() only (1) --->
<--- Exiting Template::HandleEvent() 1 --->
trial completed
<--- Entering Experiment::FinishTrial() 0 --->
sqlite: SELECT COUNT(*) FROM sqlite_master WHERE type='table' and name='TrialsTodo'
sqlite: DELETE FROM TrialsTodo WHERE SessionID=1 AND ItemCellID=1 AND Ord=1
   <--- Entering Trial::Finish() 1 --->
      <--- Entering ItemCell::Finish() 1 --->
      <--- Exiting ItemCell::Finish() 1 --->
<--- Exiting Trial::Finish() 1 --->
<--- Exiting Experiment::FinishTrial() 0 --->
<--- Entering Experiment::PrepareNextTrial() 0 --->
   <--- Entering Template::AddAOIs() only (1) --->
   <--- Exiting Template::AddAOIs() only (1) --->
   <--- Entering Template::Prepare() only (1) --->
   <--- Entering Stimulus::Prepare() 19 --->
   <--- Exiting Stimulus::Prepare() 19 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() dk.png --->
      <--- Exiting StimulusImg::Prepare() dk.png --->
   <--- Entering Stimulus::Prepare() 20 --->
   <--- Exiting Stimulus::Prepare() 20 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() sg.png --->
      <--- Exiting StimulusImg::Prepare() sg.png --->
   <--- Entering State::Prepare() prep (1) --->
         <--- Entering Event::Prepare() 7 --->
         <--- Entering StimulusWebcam::Prepare() 0 --->
         <--- Exiting StimulusWebcam::Prepare() 0 --->
         <--- Exiting Event::Prepare() 7 --->
   <--- Exiting State::Prepare() prep (1) --->
   <--- Entering State::Prepare() main (2) --->
         <--- Entering Event::Prepare() 1 --->
   <--- Entering StimulusDisplayOn::Prepare() 0 --->
   <--- Exiting StimulusDisplayOn::Prepare() 0 --->
         <--- Exiting Event::Prepare() 1 --->
   <--- Exiting State::Prepare() main (2) --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
   <--- Exiting Template::Prepare() only (1) --->
<--- Exiting Experiment::PrepareNextTrial() 0 --->
<--- Entering Experiment::StartNextTrial() 0 --->
   <--- Entering Trial::Start() 2 --->
   <--- Entering ItemCell::Start() 2 --->
      <--- Entering Template::Start() 1 --->
      <--- Exiting Template::Start() 1 --->
         <--- Entering State::Start() prep (1) --->
         <--- Entering State::Main() prep (1) --->
         <--- Exiting State::Start() prep (1) --->
   <--- Exiting Trial::Start() 2 --->
<--- Exiting Experiment::StartNextTrial() 0 --->
         <--- Entering Event::Action() 7 --->
         <--- Entering StimulusWebcam::Action() 0 --->
StimulusWebcam::Prepare(): Thread already active
         <--- Exiting Event::Action() 7 --->
... user event 7 2281
      <--- Entering WatchDone::CheckCondition() 2 --->
      <--- Exiting WatchDone::CheckCondition() 2 --->
done signaled
            <--- Entering State::Finish() prep (1) --->
         <--- Exiting State::Main() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
<--- Entering Template::HandleEvent() 1 --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
         <--- Entering State::Start() main (2) --->
         <--- Entering State::Main() main (2) --->
         <--- Entering Event::Action() 1 --->
         <--- Exiting State::Start() main (2) --->
   <--- Entering StimulusDisplayOn::Action() 0 --->
<--- Exiting Template::HandleEvent() 1 --->
   <--- Exiting StimulusDisplayOn::Action() 0 --->
   <--- Entering Stimulus::Action() 0 --->
   <--- Exiting Stimulus::Action() 0 --->
         <--- Exiting Event::Action() 1 --->
... user event 7 2288
   <--- Entering State::ProcessMouseButton() main (2) --->
         <--- Entering WatchMouse::CheckCondition() 1 --->
1 watch 1 140720308486144
1 result 0
         <--- Exiting WatchMouse::CheckCondition() 1 --->
   <--- Exiting State::ProcessMouseButton() main (2) --->
   <--- Entering State::ProcessMouseButton() main (2) --->
         <--- Entering WatchMouse::CheckCondition() 1 --->
1 watch 1 140720308486145
1 result 1
         <--- Exiting WatchMouse::CheckCondition() 1 --->
mouse button signaled (WatchID=1)
   <--- Exiting State::ProcessMouseButton() main (2) --->
            <--- Entering State::Finish() main (2) --->
         <--- Exiting State::Main() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
<--- Entering Template::HandleEvent() 1 --->
ending trial
   <--- Entering Template::Finish() only (1) --->
      <--- Entering StimulusImg::Finish() dk.png --->
      <--- Exiting StimulusImg::Finish() dk.png --->
      <--- Entering StimulusImg::Finish() sg.png --->
      <--- Exiting StimulusImg::Finish() sg.png --->
            <--- Entering State::Finish() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::PostTrial() prep (1) --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::Finish() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
            <--- Entering State::PostTrial() main (2) --->
            <--- Exiting State::Finish() main (2) --->
   <--- Exiting Template::Finish() only (1) --->
<--- Exiting Template::HandleEvent() 1 --->
trial completed
<--- Entering Experiment::FinishTrial() 0 --->
sqlite: SELECT COUNT(*) FROM sqlite_master WHERE type='table' and name='TrialsTodo'
sqlite: DELETE FROM TrialsTodo WHERE SessionID=1 AND ItemCellID=2 AND Ord=2
   <--- Entering Trial::Finish() 2 --->
      <--- Entering ItemCell::Finish() 2 --->
      <--- Exiting ItemCell::Finish() 2 --->
<--- Exiting Trial::Finish() 2 --->
<--- Exiting Experiment::FinishTrial() 0 --->
<--- Entering Experiment::PrepareNextTrial() 0 --->
   <--- Entering Template::AddAOIs() only (1) --->
   <--- Exiting Template::AddAOIs() only (1) --->
   <--- Entering Template::Prepare() only (1) --->
   <--- Entering Stimulus::Prepare() 21 --->
   <--- Exiting Stimulus::Prepare() 21 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() sg.png --->
      <--- Exiting StimulusImg::Prepare() sg.png --->
   <--- Entering Stimulus::Prepare() 22 --->
   <--- Exiting Stimulus::Prepare() 22 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() dk.png --->
      <--- Exiting StimulusImg::Prepare() dk.png --->
   <--- Entering State::Prepare() prep (1) --->
         <--- Entering Event::Prepare() 7 --->
         <--- Entering StimulusWebcam::Prepare() 0 --->
         <--- Exiting StimulusWebcam::Prepare() 0 --->
         <--- Exiting Event::Prepare() 7 --->
   <--- Exiting State::Prepare() prep (1) --->
   <--- Entering State::Prepare() main (2) --->
         <--- Entering Event::Prepare() 1 --->
   <--- Entering StimulusDisplayOn::Prepare() 0 --->
   <--- Exiting StimulusDisplayOn::Prepare() 0 --->
         <--- Exiting Event::Prepare() 1 --->
   <--- Exiting State::Prepare() main (2) --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
   <--- Exiting Template::Prepare() only (1) --->
<--- Exiting Experiment::PrepareNextTrial() 0 --->
<--- Entering Experiment::StartNextTrial() 0 --->
   <--- Entering Trial::Start() 3 --->
   <--- Entering ItemCell::Start() 3 --->
      <--- Entering Template::Start() 1 --->
      <--- Exiting Template::Start() 1 --->
         <--- Entering State::Start() prep (1) --->
         <--- Entering State::Main() prep (1) --->
         <--- Exiting State::Start() prep (1) --->
   <--- Exiting Trial::Start() 3 --->
<--- Exiting Experiment::StartNextTrial() 0 --->
         <--- Entering Event::Action() 7 --->
         <--- Entering StimulusWebcam::Action() 0 --->
StimulusWebcam::Prepare(): Thread already active
         <--- Exiting Event::Action() 7 --->
... user event 7 2990
      <--- Entering WatchDone::CheckCondition() 2 --->
      <--- Exiting WatchDone::CheckCondition() 2 --->
done signaled
            <--- Entering State::Finish() prep (1) --->
         <--- Exiting State::Main() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
<--- Entering Template::HandleEvent() 1 --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
         <--- Entering State::Start() main (2) --->
         <--- Exiting State::Start() main (2) --->
<--- Exiting Template::HandleEvent() 1 --->
         <--- Entering State::Main() main (2) --->
         <--- Entering Event::Action() 1 --->
   <--- Entering StimulusDisplayOn::Action() 0 --->
   <--- Exiting StimulusDisplayOn::Action() 0 --->
   <--- Entering Stimulus::Action() 0 --->
   <--- Exiting Stimulus::Action() 0 --->
         <--- Exiting Event::Action() 1 --->
... user event 7 2997
   <--- Entering State::ProcessMouseButton() main (2) --->
         <--- Entering WatchMouse::CheckCondition() 1 --->
1 watch 1 140720308486144
1 result 0
         <--- Exiting WatchMouse::CheckCondition() 1 --->
   <--- Exiting State::ProcessMouseButton() main (2) --->
   <--- Entering State::ProcessMouseButton() main (2) --->
         <--- Entering WatchMouse::CheckCondition() 1 --->
1 watch 1 140720308486145
1 result 1
         <--- Exiting WatchMouse::CheckCondition() 1 --->
mouse button signaled (WatchID=1)
   <--- Exiting State::ProcessMouseButton() main (2) --->
            <--- Entering State::Finish() main (2) --->
         <--- Exiting State::Main() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
<--- Entering Template::HandleEvent() 1 --->
ending trial
   <--- Entering Template::Finish() only (1) --->
      <--- Entering StimulusImg::Finish() sg.png --->
      <--- Exiting StimulusImg::Finish() sg.png --->
      <--- Entering StimulusImg::Finish() dk.png --->
      <--- Exiting StimulusImg::Finish() dk.png --->
            <--- Entering State::Finish() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::PostTrial() prep (1) --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::Finish() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
            <--- Entering State::PostTrial() main (2) --->
            <--- Exiting State::Finish() main (2) --->
   <--- Exiting Template::Finish() only (1) --->
<--- Exiting Template::HandleEvent() 1 --->
trial completed
<--- Entering Experiment::FinishTrial() 0 --->
sqlite: SELECT COUNT(*) FROM sqlite_master WHERE type='table' and name='TrialsTodo'
sqlite: DELETE FROM TrialsTodo WHERE SessionID=1 AND ItemCellID=3 AND Ord=3
   <--- Entering Trial::Finish() 3 --->
      <--- Entering ItemCell::Finish() 3 --->
      <--- Exiting ItemCell::Finish() 3 --->
<--- Exiting Trial::Finish() 3 --->
<--- Exiting Experiment::FinishTrial() 0 --->
<--- Entering Experiment::PrepareNextTrial() 0 --->
   <--- Entering Template::AddAOIs() only (1) --->
   <--- Exiting Template::AddAOIs() only (1) --->
   <--- Entering Template::Prepare() only (1) --->
   <--- Entering Stimulus::Prepare() 23 --->
   <--- Exiting Stimulus::Prepare() 23 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() dk.png --->
      <--- Exiting StimulusImg::Prepare() dk.png --->
   <--- Entering Stimulus::Prepare() 24 --->
   <--- Exiting Stimulus::Prepare() 24 --->
<--- Entering Display_SDL::InitMemSurface() 4 --->
<--- Exiting Display_SDL::InitMemSurface() 4 --->
      <--- Entering StimulusImg::Prepare() sg.png --->
      <--- Exiting StimulusImg::Prepare() sg.png --->
   <--- Entering State::Prepare() prep (1) --->
         <--- Entering Event::Prepare() 7 --->
         <--- Entering StimulusWebcam::Prepare() 0 --->
         <--- Exiting StimulusWebcam::Prepare() 0 --->
         <--- Exiting Event::Prepare() 7 --->
   <--- Exiting State::Prepare() prep (1) --->
   <--- Entering State::Prepare() main (2) --->
         <--- Entering Event::Prepare() 1 --->
   <--- Entering StimulusDisplayOn::Prepare() 0 --->
   <--- Exiting StimulusDisplayOn::Prepare() 0 --->
         <--- Exiting Event::Prepare() 1 --->
   <--- Exiting State::Prepare() main (2) --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
   <--- Exiting Template::Prepare() only (1) --->
<--- Exiting Experiment::PrepareNextTrial() 0 --->
<--- Entering Experiment::StartNextTrial() 0 --->
   <--- Entering Trial::Start() 4 --->
   <--- Entering ItemCell::Start() 4 --->
      <--- Entering Template::Start() 1 --->
      <--- Exiting Template::Start() 1 --->
         <--- Entering State::Start() prep (1) --->
         <--- Entering State::Main() prep (1) --->
         <--- Exiting State::Start() prep (1) --->
   <--- Exiting Trial::Start() 4 --->
<--- Exiting Experiment::StartNextTrial() 0 --->
         <--- Entering Event::Action() 7 --->
         <--- Entering StimulusWebcam::Action() 0 --->
StimulusWebcam::Prepare(): Thread already active
         <--- Exiting Event::Action() 7 --->
... user event 7 3605
      <--- Entering WatchDone::CheckCondition() 2 --->
      <--- Exiting WatchDone::CheckCondition() 2 --->
done signaled
            <--- Entering State::Finish() prep (1) --->
         <--- Exiting State::Main() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
<--- Entering Template::HandleEvent() 1 --->
<--- Entering Template::AttachState() 1 --->
<--- Exiting Template::AttachState() 1 --->
         <--- Entering State::Start() main (2) --->
         <--- Entering State::Main() main (2) --->
         <--- Entering Event::Action() 1 --->
         <--- Exiting State::Start() main (2) --->
   <--- Entering StimulusDisplayOn::Action() 0 --->
<--- Exiting Template::HandleEvent() 1 --->
   <--- Exiting StimulusDisplayOn::Action() 0 --->
   <--- Entering Stimulus::Action() 0 --->
   <--- Exiting Stimulus::Action() 0 --->
         <--- Exiting Event::Action() 1 --->
... user event 7 3612
   <--- Entering State::ProcessMouseButton() main (2) --->
         <--- Entering WatchMouse::CheckCondition() 1 --->
1 watch 1 140720308486144
1 result 0
         <--- Exiting WatchMouse::CheckCondition() 1 --->
   <--- Exiting State::ProcessMouseButton() main (2) --->
   <--- Entering State::ProcessMouseButton() main (2) --->
         <--- Entering WatchMouse::CheckCondition() 1 --->
1 watch 1 140720308486145
1 result 1
         <--- Exiting WatchMouse::CheckCondition() 1 --->
mouse button signaled (WatchID=1)
   <--- Exiting State::ProcessMouseButton() main (2) --->
            <--- Entering State::Finish() main (2) --->
         <--- Exiting State::Main() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
<--- Entering Template::HandleEvent() 1 --->
ending trial
   <--- Entering Template::Finish() only (1) --->
      <--- Entering StimulusImg::Finish() dk.png --->
      <--- Exiting StimulusImg::Finish() dk.png --->
      <--- Entering StimulusImg::Finish() sg.png --->
      <--- Exiting StimulusImg::Finish() sg.png --->
            <--- Entering State::Finish() prep (1) --->
         <--- Entering Event::Finish() 7 --->
         <--- Entering StimulusWebcam::Finish() 0 --->
         <--- Exiting StimulusWebcam::Finish() 0 --->
         <--- Exiting Event::Finish() 7 --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::PostTrial() prep (1) --->
            <--- Exiting State::Finish() prep (1) --->
            <--- Entering State::Finish() main (2) --->
         <--- Entering Event::Finish() 1 --->
         <--- Exiting Event::Finish() 1 --->
            <--- Exiting State::Finish() main (2) --->
            <--- Entering State::PostTrial() main (2) --->
            <--- Exiting State::Finish() main (2) --->
   <--- Exiting Template::Finish() only (1) --->
<--- Exiting Template::HandleEvent() 1 --->
trial completed
<--- Entering Experiment::FinishTrial() 0 --->
sqlite: SELECT COUNT(*) FROM sqlite_master WHERE type='table' and name='TrialsTodo'
sqlite: DELETE FROM TrialsTodo WHERE SessionID=1 AND ItemCellID=4 AND Ord=4
   <--- Entering Trial::Finish() 4 --->
      <--- Entering ItemCell::Finish() 4 --->
      <--- Exiting ItemCell::Finish() 4 --->
<--- Exiting Trial::Finish() 4 --->
<--- Exiting Experiment::FinishTrial() 0 --->
<--- Entering Experiment::PrepareNextTrial() 0 --->
END OF TRIALS!
<--- Exiting Experiment::PrepareNextTrial() 0 --->
finished experiment
cleanup
sqlite: INSERT INTO Trial VALUES (NULL, 1, 1, 1, 605, 2252, NULL, NULL)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Trial'
NULL, 1, 521
sqlite: INSERT INTO Response VALUES (NULL, 1, 521)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Response'
respData has 0 events
      <--- Entering ItemCell::StoreData() 1 --->
sqlite: BEGIN;
sqlite: INSERT INTO StateTiming VALUES (521, 1, 605)
sqlite: INSERT INTO StateTiming VALUES (521, 2, 616)
sqlite: COMMIT;
sqlite: BEGIN;
sqlite: INSERT INTO EventTiming VALUES (521, 7, 614)
sqlite: INSERT INTO EventTiming VALUES (521, 1, 621)
sqlite: COMMIT;
      <--- Exiting ItemCell::StoreData() 1 --->
sqlite: INSERT INTO Trial VALUES (NULL, 2, 2, 1, 2272, 2961, NULL, NULL)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Trial'
NULL, 1, 522
sqlite: INSERT INTO Response VALUES (NULL, 1, 522)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Response'
respData has 0 events
      <--- Entering ItemCell::StoreData() 2 --->
sqlite: BEGIN;
sqlite: INSERT INTO StateTiming VALUES (522, 1, 2272)
sqlite: INSERT INTO StateTiming VALUES (522, 2, 2283)
sqlite: COMMIT;
sqlite: BEGIN;
sqlite: INSERT INTO EventTiming VALUES (522, 7, 2281)
sqlite: INSERT INTO EventTiming VALUES (522, 1, 2288)
sqlite: COMMIT;
      <--- Exiting ItemCell::StoreData() 2 --->
sqlite: INSERT INTO Trial VALUES (NULL, 3, 3, 1, 2982, 3578, NULL, NULL)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Trial'
NULL, 1, 523
sqlite: INSERT INTO Response VALUES (NULL, 1, 523)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Response'
respData has 0 events
      <--- Entering ItemCell::StoreData() 3 --->
sqlite: BEGIN;
sqlite: INSERT INTO StateTiming VALUES (523, 1, 2982)
sqlite: INSERT INTO StateTiming VALUES (523, 2, 2993)
sqlite: COMMIT;
sqlite: BEGIN;
sqlite: INSERT INTO EventTiming VALUES (523, 7, 2990)
sqlite: INSERT INTO EventTiming VALUES (523, 1, 2997)
sqlite: COMMIT;
      <--- Exiting ItemCell::StoreData() 3 --->
sqlite: INSERT INTO Trial VALUES (NULL, 4, 4, 1, 3597, 4260, NULL, NULL)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Trial'
NULL, 1, 524
sqlite: INSERT INTO Response VALUES (NULL, 1, 524)
sqlite: SELECT seq FROM SQLITE_SEQUENCE WHERE name='Response'
respData has 0 events
      <--- Entering ItemCell::StoreData() 4 --->
sqlite: BEGIN;
sqlite: INSERT INTO StateTiming VALUES (524, 1, 3596)
sqlite: INSERT INTO StateTiming VALUES (524, 2, 3607)
sqlite: COMMIT;
sqlite: BEGIN;
sqlite: INSERT INTO EventTiming VALUES (524, 7, 3605)
sqlite: INSERT INTO EventTiming VALUES (524, 1, 3612)
sqlite: COMMIT;
      <--- Exiting ItemCell::StoreData() 4 --->
sqlite: UPDATE Session SET Completion='COMPLETED' WHERE SessionID=1
<--- Entering Experiment::~Experiment() --->
.Deleting Trials.
   <--- Entering Trial::~Trial() 4 --->
   <--- Exiting Trial::~Trial() 4 --->
   <--- Entering Trial::~Trial() 3 --->
   <--- Exiting Trial::~Trial() 3 --->
   <--- Entering Trial::~Trial() 2 --->
   <--- Exiting Trial::~Trial() 2 --->
   <--- Entering Trial::~Trial() 1 --->
   <--- Exiting Trial::~Trial() 1 --->
.Deleting ItemCells.
   <--- Entering ItemCell::~ItemCell() 4 --->
      <--- Entering StimulusImg::~StimulusImg() sg.png --->
      <--- Exiting StimulusImg::~StimulusImg() sg.png --->
      <--- Entering StimulusImg::~StimulusImg() dk.png --->
      <--- Exiting StimulusImg::~StimulusImg() dk.png --->
   <--- Exiting ItemCell::~ItemCell() 4 --->
   <--- Entering ItemCell::~ItemCell() 3 --->
      <--- Entering StimulusImg::~StimulusImg() dk.png --->
      <--- Exiting StimulusImg::~StimulusImg() dk.png --->
      <--- Entering StimulusImg::~StimulusImg() sg.png --->
      <--- Exiting StimulusImg::~StimulusImg() sg.png --->
   <--- Exiting ItemCell::~ItemCell() 3 --->
   <--- Entering ItemCell::~ItemCell() 2 --->
      <--- Entering StimulusImg::~StimulusImg() sg.png --->
      <--- Exiting StimulusImg::~StimulusImg() sg.png --->
      <--- Entering StimulusImg::~StimulusImg() dk.png --->
      <--- Exiting StimulusImg::~StimulusImg() dk.png --->
   <--- Exiting ItemCell::~ItemCell() 2 --->
   <--- Entering ItemCell::~ItemCell() 1 --->
      <--- Entering StimulusImg::~StimulusImg() dk.png --->
      <--- Exiting StimulusImg::~StimulusImg() dk.png --->
      <--- Entering StimulusImg::~StimulusImg() sg.jpg --->
      <--- Exiting StimulusImg::~StimulusImg() sg.jpg --->
   <--- Exiting ItemCell::~ItemCell() 1 --->
.Deleting Templates.
   <--- Entering Template::~Template() only (1) --->
      <--- Entering State::~State() main (2) --->
         <--- Entering Event::~Event() 1 --->
         <--- Exiting Event::~Event() 1 --->
         <--- Entering Watch::~Watch() 1 --->
         <--- Exiting Watch::~Watch() 1 --->
      <--- Exiting State::~State() main (2) --->
      <--- Entering State::~State() prep (1) --->
         <--- Entering Event::~Event() 7 --->
         <--- Entering StimulusWebcam::Cleanup() 0 --->
         <--- Entering StimulusWebcam::Cleanup() 0 --->
         <--- Exiting Event::~Event() 7 --->
         <--- Entering Watch::~Watch() 2 --->
         <--- Exiting Watch::~Watch() 2 --->
      <--- Exiting State::~State() prep (1) --->
   <--- Exiting Template::~Template() only (1) --->
.Deleting Stimuli.
.Deleting Devices.
.Deleting Recordsets.
.Deleting Recordsets.
      <--- Entering Webcam2::~Webcam2() 0 --->
      <--- Exiting Webcam2::~Webcam2() 0 --->
<--- Exiting Experiment::~Experiment() --->
<--- Entering Audio_SDL::~Audio_SDL() 0 --->
<--- Exiting Audio_SDL::~Audio_SDL() 0 --->
.Deleting ReportError.
